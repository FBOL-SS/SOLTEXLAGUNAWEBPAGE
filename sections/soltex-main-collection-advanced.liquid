<style>
  #shopify-section-{{ section.id }}{
    --bg:#f8fafc; --fg:#0d1b2a; --bd:#e5e7eb; --muted:#475569; --card:#ffffff;
  }
  #shopify-section-{{ section.id }} .wrap{background:var(--bg);color:var(--fg);padding:clamp(28px,5vw,64px) 16px;}
  #shopify-section-{{ section.id }} .container{max-width:1240px;margin:0 auto;display:grid;gap:22px;}
  @media(min-width:1024px){ #shopify-section-{{ section.id }} .container{ grid-template-columns: 280px 1fr; } }

  .title{font:800 clamp(26px,4vw,40px)/1.1 Poppins,system-ui;margin:0 0 10px;text-align:center;}
  .toolbar{display:flex;justify-content:space-between;align-items:center;gap:10px;margin-bottom:8px;flex-wrap:wrap}
  .toolbar .count{color:var(--muted);font-size:14px}
  .toolbar .sort select{border:1px solid var(--bd);border-radius:8px;padding:8px 12px;font-size:15px;background:#fff}

  .sidebar{border:1px solid var(--bd);background:var(--card);border-radius:12px;padding:16px;height:max-content;position:sticky;top:16px}
  .filter{border-top:1px solid var(--bd);padding-top:12px;margin-top:12px}
  .filter:first-child{border-top:0;margin-top:0;padding-top:0}
  .filter h3{margin:0 0 8px;font:700 14px/1.2 Inter,system-ui;color:var(--fg)}
  .filter ul{list-style:none;padding:0;margin:0;display:grid;gap:8px}
  .filter label{display:flex;gap:8px;align-items:center;font-size:14px;color:var(--fg)}
  .range{display:flex;gap:10px}
  .range input{width:100%;padding:8px 10px;border:1px solid var(--bd);border-radius:8px;background:#fff}

  .filter-actions{display:flex;gap:8px;margin-top:12px}
  .btn{display:inline-block;padding:10px 14px;border-radius:10px;border:1px solid var(--bd);background:#fff;font-weight:700;cursor:pointer}
  .btn.primary{background:#0d1b2a;color:#fff;border-color:#0d1b2a}
  .btn.link{background:transparent;border:none;color:#0d1b2a;padding:0}

  .grid{display:grid;gap:18px}
  @media(min-width:768px){ .grid{grid-template-columns:repeat(3,1fr)} }
  @media(min-width:1140px){ .grid{grid-template-columns:repeat(4,1fr)} }

  .card{border:1px solid var(--bd);border-radius:12px;overflow:hidden;background:#fff;transition:all .25s}
  .card:hover{box-shadow:0 8px 18px rgba(0,0,0,.08);transform:translateY(-2px)}
  .media img{width:100%;aspect-ratio:1/1;object-fit:cover;display:block}
  .info{padding:12px;text-align:center}
  .name{font-weight:600;font-size:15px;margin:0 0 4px;min-height:40px}
  .price{font-weight:700;color:#0d1b2a}
  .meta{font-size:12px;color:#16a34a;font-weight:700}
  .meta.oos{color:#ef4444}
  .actions{display:flex;gap:8px;justify-content:center;padding:12px;border-top:1px solid var(--bd);background:#fafafa}
  .btn.qv{background:#fff}

  .modal{position:fixed;inset:0;background:rgba(0,0,0,.45);display:none;align-items:center;justify-content:center;padding:16px;z-index:9999}
  .modal.open{display:flex}
  .modal .box{position:relative;background:#fff;color:#0f172a;max-width:860px;width:100%;border-radius:14px;overflow:hidden;display:grid}
  @media(min-width:900px){ .modal .box{grid-template-columns: 1.2fr 1fr} }
  .modal .media{background:#f8fafc}
  .modal .media img{width:100%;height:auto;display:block}
  .modal .content{padding:18px}
  .modal h3{margin:0 0 6px;font:800 20px/1.2 Poppins,system-ui}
  .modal .price{font-weight:800;margin:6px 0 10px}
  .modal .avail{font-size:13px;font-weight:700;color:#16a34a}
  .modal .avail.oos{color:#ef4444}
  .modal .close{position:absolute;top:10px;right:14px;background:#fff;border:1px solid #e5e7eb;border-radius:10px;padding:6px 10px;cursor:pointer}
  .qty{display:flex;gap:8px;align-items:center;margin:12px 0}
  .qty input{width:80px;padding:8px;border:1px solid #cbd5e1;border-radius:8px}
  .addtocart{padding:12px 16px;border-radius:10px;border:1px solid #0d1b2a;background:#0d1b2a;color:#fff;font-weight:700;cursor:pointer}
</style>

<section class="wrap">
  <h1 class="title">{{ section.settings.title | default: collection.title }}</h1>

  <div class="container">
    <aside class="sidebar">
      <form id="FacetFiltersForm" method="get" action="{{ collection.url }}">
        {% for filter in collection.filters %}
          <div class="filter">
            <h3>{{ filter.label }}</h3>

            {% case filter.type %}
              {% when 'list' %}
                <ul>
                  {% for v in filter.values %}
                    <li>
                      <label>
                        <input type="checkbox"
                               name="{{ v.param_name }}"
                               value="{{ v.value | escape }}"
                               {% if v.active %}checked{% endif %}
                               {% if v.count == 0 and v.active == false %}disabled{% endif %}>
                        <span>{{ v.label }} {% if section.settings.show_counts %}<small>({{ v.count }})</small>{% endif %}</span>
                      </label>
                    </li>
                  {% endfor %}
                </ul>

              {% when 'price_range' %}
                <div class="range">
                  <input name="{{ filter.min_value.param_name }}"
                         type="number"
                         placeholder="{{ cart.currency.symbol }}0"
                         {% if filter.min_value.value %}value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"{% endif %}>
                  <input name="{{ filter.max_value.param_name }}"
                         type="number"
                         placeholder="{{ cart.currency.symbol }}9999"
                         {% if filter.max_value.value %}value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"{% endif %}>
                </div>
            {% endcase %}
          </div>
        {% endfor %}
        <div class="filter-actions">
          <button class="btn primary" type="submit">Aplicar filtros</button>
          <a class="btn link" href="{{ collection.url }}">Limpiar</a>
        </div>
      </form>
    </aside>

    <div>
      <div class="toolbar">
        <div class="count">{{ collection.products_count }} productos</div>
        <form class="sort" method="get">
          <label for="sort_by" class="visually-hidden">Ordenar por</label>
          <select id="sort_by" name="sort_by" onchange="this.form.submit()">
            <option value="best-selling">Más vendidos</option>
            <option value="price-ascending">Precio: bajo a alto</option>
            <option value="price-descending">Precio: alto a bajo</option>
            <option value="created-descending">Novedades</option>
          </select>
        </form>
      </div>

      {% paginate collection.products by section.settings.per_page %}
        {% if collection.products.size > 0 %}
          <div class="grid">
            {% for product in collection.products %}
              {% assign featured = product.featured_image %}
              {% assign first_avail = product.selected_or_first_available_variant %}

              <div class="card"
                   data-product-handle="{{ product.handle }}"
                   data-product-url="{{ product.url | within: collection }}"
                   data-product-title="{{ product.title | escape }}">

                <a class="media" href="{{ product.url | within: collection }}">
                  {% if featured %}
                    {{ featured | image_url: width: 700 | image_tag: loading: 'lazy', alt: product.title }}
                  {% else %}
                    {{ 'product-1' | placeholder_svg_tag }}
                  {% endif %}
                </a>

                <div class="info">
                  <p class="name">{{ product.title }}</p>
                  <p class="price">{{ product.price | money }}</p>
                  <p class="meta {% unless first_avail.available %}oos{% endunless %}">
                    {% if first_avail.available %}Disponible{% else %}Agotado{% endif %}
                  </p>
                </div>

                <div class="actions">
                  <button class="btn qv" type="button" data-qv>Vista rápida</button>
                  <form action="{{ routes.cart_add_url }}" method="post">
                    <input type="hidden" name="id" value="{{ first_avail.id }}">
                    <button class="btn primary" type="submit" {% unless first_avail.available %}disabled{% endunless %}>Agregar</button>
                  </form>
                </div>

                <script type="application/json" class="qv-json">{{ product | json }}</script>
              </div>
            {% endfor %}
          </div>

          {% if paginate.pages > 1 %}
            <nav class="pagination" role="navigation" style="text-align:center;margin-top:28px">
              {% if paginate.previous %}
                <a href="{{ paginate.previous.url }}">&larr; Anterior</a>
              {% endif %}
              <span style="margin:0 10px">Página {{ paginate.current_page }} de {{ paginate.pages }}</span>
              {% if paginate.next %}
                <a href="{{ paginate.next.url }}">Siguiente &rarr;</a>
              {% endif %}
            </nav>
          {% endif %}
        {% else %}
          <p>No hay productos disponibles.</p>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
</section>

<div id="qv-{{ section.id }}" class="modal">
  <div class="box">
    <button class="close" type="button">✕</button>
    <div class="media"><img alt="" width="800" height="800" /></div>
    <div class="content">
      <h3></h3>
      <p class="price"></p>
      <p class="avail"></p>
      <form class="qv-form" action="{{ routes.cart_add_url }}" method="post">
        <div class="qty">
          <label for="qv-qty-{{ section.id }}">Cantidad</label>
          <input id="qv-qty-{{ section.id }}" type="number" name="quantity" min="1" value="1">
        </div>
        <input type="hidden" name="id" value="">
        <button class="addtocart" type="submit">Agregar al carrito</button>
      </form>
      <p style="margin-top:10px"><a class="goto" href="#">Ver producto completo</a></p>
    </div>
  </div>
</div>

<script>
(function(){
  const modal = document.getElementById('qv-{{ section.id }}');
  const sectionEl = document.getElementById('shopify-section-{{ section.id }}');
  const imgEl = modal.querySelector('.media img');
  const titleEl = modal.querySelector('h3');
  const priceEl = modal.querySelector('.price');
  const availEl = modal.querySelector('.avail');
  const formEl = modal.querySelector('.qv-form');
  const variantInput = formEl.querySelector('input[name="id"]');
  const qtyInput = formEl.querySelector('input[name="quantity"]');
  const addBtn = formEl.querySelector('.addtocart');
  const gotoLink = modal.querySelector('.goto');
  const closeBtn = modal.querySelector('.close');

  const fmt = (m)=>Shopify.formatMoney(m, {{ shop.money_format | json }});
  const openModal=()=>modal.classList.add('open');
  const closeModal=()=>modal.classList.remove('open');

  closeBtn.addEventListener('click', closeModal);
  modal.addEventListener('click', e=>{if(e.target===modal)closeModal();});
  document.addEventListener('keydown', e=>{if(e.key==='Escape')closeModal();});

  sectionEl.addEventListener('click', e=>{
    const btn=e.target.closest('[data-qv]');
    if(!btn)return;
    e.preventDefault();
    const card=btn.closest('.card');
    const jsonTag=card.querySelector('.qv-json');
    const p=JSON.parse(jsonTag.textContent);

    titleEl.textContent=p.title;
    gotoLink.href=card.getAttribute('data-product-url');
    const img=p.images?.[0];
    imgEl.src=img;imgEl.alt=p.title;

    const v=p.variants.find(x=>x.available)||p.variants[0];
    priceEl.textContent=fmt(v.price);
    variantInput.value=v.id;
    addBtn.disabled=!v.available;
    availEl.textContent=v.available?'Disponible':'Agotado';
    availEl.classList.toggle('oos',!v.available);
    availEl.classList.toggle('ok',v.available);

    openModal();
  });

  async function updateCartCount(){
    try{
      const res=await fetch('/cart.js');
      const cart=await res.json();
      const count=cart.item_count||0;
      document.querySelectorAll('.cart-count-bubble,[data-cart-count]').forEach(el=>{
        el.textContent=count;
        el.setAttribute('data-cart-count',count);
      });
    }catch(e){}
  }

  formEl.addEventListener('submit', async e=>{
    e.preventDefault();
    addBtn.disabled=true;
    addBtn.textContent='Agregando...';
    const fd=new FormData(formEl);
    try{
      const r=await fetch('{{ routes.cart_add_url }}.json',{method:'POST',body:fd,headers:{Accept:'application/json'}});
      if(!r.ok){formEl.submit();return;}
      await updateCartCount();
      addBtn.textContent='Agregado ✓';
      setTimeout(()=>{addBtn.textContent='Agregar al carrito';addBtn.disabled=false;closeModal();},800);
    }catch{formEl.submit();}
  });
})();
</script>

{% schema %}
{
  "name": "soltex-main-collection",
  "settings": [
    {"type": "text","id": "title","label": "Título","default": "Catálogo de productos"},
    {"type": "checkbox","id": "show_counts","label": "Mostrar conteo","default": true},
    {"type": "range","id": "per_page","label": "Productos por página","min": 8,"max": 48,"step": 4,"default": 12}
  ],
  "presets": [{"name": "soltex-main-collection-advanced"}]
}
{% endschema %}
